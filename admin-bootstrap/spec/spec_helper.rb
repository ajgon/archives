# This file was generated by the `rspec --init` command. Conventionally, all
# specs live under a `spec` directory, which RSpec adds to the `$LOAD_PATH`.
# Require this file using `require "spec_helper.rb"` to ensure that it is only
# loaded once.
#
# See http://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration

require 'active_model'
require 'action_view'
require 'action_controller'
require 'rails'
require 'rails/generators'
require 'admin-bootstrap'

RSpec.configure do |config|
  config.treat_symbols_as_metadata_keys_with_true_values = true
  config.run_all_when_everything_filtered = true
  config.filter_run :focus
end

def prepare_routes
  FileUtils.mkdir_p(File.join(DESTINATION, 'config'))
  File.open(File.join(DESTINATION, 'config', 'routes.rb'), 'w') do |r|
    r.write("Dummy::Application.routes.draw do\n\nend\n")
  end
end

def prepare_spec options = {}
  FileUtils.mkdir_p(File.join(DESTINATION, 'spec'))
  spec_contents = "# This file was generated by the `rspec --init` command. Conventionally, all\n# specs live under a `spec` directory, which RSpec adds to the `$LOAD_PATH`.\n# Require this file using `require \"spec_helper.rb\"` to ensure that it is only\n# loaded once.\n#\n# See http://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration\n"
  spec_contents += "require 'something'\nrequire 'something else'\n" if options[:additional_requires]
  spec_contents += "RSpec.configure do |config|\n  config.treat_symbols_as_metadata_keys_with_true_values = true\n  config.run_all_when_everything_filtered = true\n  config.filter_run :focus\nend\n"
  File.open(File.join(DESTINATION, 'spec', 'spec_helper.rb'), 'w') do |s|
    s.write(spec_contents)
  end
end

def prepare_formtastic
  FileUtils.mkdir_p(File.join(DESTINATION, 'config', 'initializers'))
  File.open(File.join(DESTINATION, 'config', 'initializers', 'formtastic.rb'), 'w')
end

def clean_generated_files
  FileUtils.rm_rf(DESTINATION)
end

def set_fake_rails_root
  rails_app_klass = Class.new do
    def self.config
      root_klass = Class.new do
        def self.root
          DESTINATION
        end
      end
    end
  end
  Rails.application = rails_app_klass
end